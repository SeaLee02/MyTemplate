<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ assembly name="$(SolutionDir)File\Sealee.T4Helper.dll" #>
<#@ import namespace="Sealee.T4Helper" #>
<#@ include file="T4Toolbox.tt" #>
<#@ include file="$(ProjectDir)Framework/T4/AppService_Test.t4" #>

<# 
		// 配置config
		string solutionsPath = Host.ResolveAssemblyReference("$(SolutionDir)");
		MyConfig myConfig=StringUtil.GetConfig (solutionsPath+"File\\T4Helper.json");
		myConfig.IsOverrideFile=true;
		myConfig.TableName="JwtUser";
		myConfig.NameSpace="My.Application.Test.AppServices.Demo";
		List<DbTable> tableInfos=DbUtil.GetDbTables(myConfig.ConnectionString,myConfig.TableName).Where(x=>x.HasPrimaryKey==true).ToList();
		string curPath = Path.GetDirectoryName(Host.TemplateFile);
	

		foreach(DbTable tableInfo in tableInfos)
		{
        	string destPath = Path.Combine(curPath, tableInfo.TableName);
			string fileName = string.Format(@"{0}\{1}.cs", destPath,  StringUtil.ToCase(tableInfo.TableName)+"AppService_Test");
			AppService_Test template = new AppService_Test(tableInfo,myConfig);
			template.Output.PreserveExistingFile =myConfig.IsOverrideFile;
			template.Output.Encoding = Encoding.UTF8;							
			template.RenderToFile(fileName);

		}
#>
